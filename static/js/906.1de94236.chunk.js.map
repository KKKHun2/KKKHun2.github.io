{"version":3,"file":"static/js/906.1de94236.chunk.js","mappings":"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","sources":["components/CreateQuestion/WritingTitle.js","components/TextEditor/TextEditor.js","components/TextEditor/TextEditor2.js","components/CreateQuestion/CreateQuestionForm.js","page/CreateQuestionPage.js"],"sourcesContent":["/* eslint-disable */\n/*\n? 김용훈 만듬\n*/\n\nimport styled from 'styled-components/macro';\nimport { SlPencil } from 'react-icons/sl';\nimport React from 'react';\n\nconst WritingContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 350px;\n  height: 500px;\n  min-height: 100vh;\n  margin-left: 20px;\n  margin-bottom: 1418px;\n  @media (max-width: 1150px) {\n    display: none;\n  }\n`;\nconst SlPencilLogo = styled(SlPencil)`\n  margin-top: 14px;\n  width: 50px;\n  height: 50px;\n`;\nconst WritingTitleForm = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 320px;\n  height: 12px;\n  padding: 10px;\n  border-radius: 5px 5px 0px 0px;\n  color: black;\n  box-shadow: 3px -3px 5px rgba(0, 0, 0, 0.1);\n  background-color: #f0f2f4;\n  border: 0.1px solid rgba(135, 135, 135, 0.8);\n\n  .body {\n    margin-right: 180px;\n  }\n`;\nconst WritingTitleForm2 = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 320px;\n  height: 30px;\n  padding: 10px;\n  background-color: white;\n  border-right: 0.1px solid rgba(135, 135, 135, 0.8);\n  border-left: 0.1px solid rgba(135, 135, 135, 0.8);\n  box-shadow: 3px -3px 5px rgba(0, 0, 0, 0.1);\n  .body2 {\n    color: black;\n    width: 300px;\n    font-size: 13px;\n    margin-left: 22px;\n    padding-right: 30px;\n  }\n`;\nconst WritingTitleForm3 = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 320px;\n  height: 35px;\n  padding: 10px;\n  border-radius: 0px 0px 5px 5px;\n  background-color: white;\n  border-right: 0.1px solid rgba(135, 135, 135, 0.8);\n  border-left: 0.1px solid rgba(135, 135, 135, 0.8);\n  border-bottom: 0.1px solid rgba(135, 135, 135, 0.8);\n  box-shadow: 3px 2px 5px rgba(0, 0, 0, 0.1);\n  .body3 {\n    color: black;\n    width: 270px;\n    font-size: 13px;\n    margin-left: 20px;\n    margin-bottom: 10px;\n  }\n`;\nconst WritingTitle = () => {\n  return (\n    <WritingContainer>\n      <WritingTitleForm>\n        <div className=\"body\">Writing a good title</div>\n      </WritingTitleForm>\n      <WritingTitleForm2>\n        <SlPencilLogo />\n        <div className=\"body2\">Your title should summarize the problem.</div>\n      </WritingTitleForm2>\n      <WritingTitleForm3>\n        <div className=\"body3\">\n          You might find that you have a better idea of your title after writing\n          out the rest of the question.\n        </div>\n      </WritingTitleForm3>\n    </WritingContainer>\n  );\n};\n\nexport default WritingTitle;\n","/* eslint-disable */\n/*\n? 김용훈 만듬\n*/\n\nimport { useEffect, useRef,useState } from 'react';\nimport 'codemirror/lib/codemirror.css';\nimport { Editor } from '@toast-ui/react-editor';\nimport '@toast-ui/editor/dist/toastui-editor.css';\nimport styled from 'styled-components/macro';\n\nconst QuestionBodyForm = styled.div`\ndisplay: flex;\n  flex-direction: column;\n  align-items: left;\n  justify-content: center;\n  width: 768px;\n  font-size: 28px;\n  margin-top: 20px;\n  height: 570px;\n  border-radius: 5px;\n  padding-bottom: 100px;\n  background-color: white;\n  border: 1px solid rgba(152, 152, 152, 0.6);\n  .tf_result {\n    height: 110px;\n    width: 710px;\n    margin: 20px 0px 3px 30px;\n    padding-bottom: 20px;\n\n  }\n\n`;\n\nconst QuestionButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100px;\n  height: 30px;\n  margin: 10px 0px 0px 20px;\n\n  border: 0.01px solid #43549f;\n  color: white;\n  :hover {\n    background-color: #0173cc;\n    border: 2px solid #0173cc;\n  }\n  background-color: #0995fd;\n  border: 2px solid #0a95ff;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n\nexport default function ToastEditor() {\n    // Editor DOM 선택용\n    const editorRef = useRef();\n    const [textData,setData] = useState('');\n     const [state,setState] = useState('');\n    // 등록 버튼 핸들러\n    const handleRegisterButton = () => {\n        // 입력창에 입력한 내용을 HTML 태그 형태로 취득\n        // console.log(editorRef.current?.getInstance().getHTML());\n        // // 입력창에 입력한 내용을 MarkDown 형태로 취득\n        // console.log(editorRef.current?.getInstance().getMarkdown());\n      \n        setData(editorRef.current?.getInstance().getMarkdown());\n    };\n\n  //       const Textbody1= textData;\n  //   useEffect(()=> {\n  //     fetch(\"http://localhost:3002/posts\",{ \n  //       method: \"POST\",\n  //       headers: { \"Content-Type\": \"application/json;charset=utf-8\", },\n  //       body: JSON.stringify({\n  //         Textbody1,\n  //       })\n  //     }).then((response) => response.json())\n  //       .then((data)=> console.log(data))             \n  // },[textData]);\n  useEffect(() => {\n        \n    console.log(textData);\n  },[textData])\n\nuseEffect(() => {\n        \n  console.log(state);\n},[state])\n\n const  handleChangeEditor = () => {\n    setState(editorRef.current?.getInstance().getHTML());\n  };\nreturn (\n    <>\n    <QuestionBodyForm>\n        <Editor \n            onChange={[handleRegisterButton,handleChangeEditor]}\n            ref={editorRef} // DOM 선택용 useRef\n            placeholder=\"내용을 입력해주세요.\"\n            previewStyle=\"vertical\" // 미리보기 스타일 지정\n            height=\"2000px\" // 에디터 창 높이\n            initialEditType=\"markdown\" //wysiwyg\n            toolbarItems={[\n                // 툴바 옵션 설정\n                ['heading', 'bold', 'italic', 'strike'],\n                ['hr', 'quote'],\n                ['ul', 'ol', 'task', 'indent', 'outdent'],\n                ['table', 'image', 'link'],\n                ['code', 'codeblock']\n            ]}\n            useCommandShortcut={false} // 키보드 입력 컨트롤 방지\n        ></Editor>\n\n{/* <QuestionButton onClick={handleRegisterButton}>등록</QuestionButton> */}\n        \n        <QuestionButton onClick={handleChangeEditor}>\n              뷰어로 확인\n              </QuestionButton>\n           \n            <div>\n              <textarea\n                className=\"tf_result\"\n                value={state}\n                readOnly=\"readOnly\"\n              ></textarea>\n            </div>\n            \n            </QuestionBodyForm>\n            </>\n            \n         \n\n    \n);\n}","/* eslint-disable */\n/*\n? 김용훈 만듬\n*/\n\nimport { useEffect, useRef,useState } from 'react';\nimport 'codemirror/lib/codemirror.css';\nimport { Editor } from '@toast-ui/react-editor';\nimport '@toast-ui/editor/dist/toastui-editor.css';\nimport styled from 'styled-components/macro';\n\nconst QuestionBodyForm = styled.div`\ndisplay: flex;\n  flex-direction: column;\n  align-items: left;\n  justify-content: center;\n  width: 768px;\n  font-size: 28px;\n  margin-top: 20px;\n  height: 570px;\n  border-radius: 5px;\n  padding-bottom: 100px;\n  background-color: white;\n  border: 1px solid rgba(152, 152, 152, 0.6);\n  .tf_result {\n    height: 110px;\n    width: 710px;\n    margin: 20px 0px 3px 30px;\n    padding-bottom: 20px;\n\n  }\n\n`;\n\nconst QuestionButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100px;\n  height: 30px;\n  margin: 10px 0px 0px 20px;\n\n  border: 0.01px solid #43549f;\n  color: white;\n  :hover {\n    background-color: #0173cc;\n    border: 2px solid #0173cc;\n  }\n  background-color: #0995fd;\n  border: 2px solid #0a95ff;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n\nexport default function ToastEditor2() {\n    // Editor DOM 선택용\n    const editorRef = useRef();\n    const [textData,setData] = useState('');\n     const [state,setState] = useState('');\n    // 등록 버튼 핸들러\n    const handleRegisterButton = () => {\n        // 입력창에 입력한 내용을 HTML 태그 형태로 취득\n        // console.log(editorRef.current?.getInstance().getHTML());\n        // // 입력창에 입력한 내용을 MarkDown 형태로 취득\n        // console.log(editorRef.current?.getInstance().getMarkdown());\n      \n        setData(editorRef.current?.getInstance().getMarkdown());\n    };\n\n        const Textbody2= textData;\n    useEffect(()=> {\n      fetch(\"http://localhost:3000/posts\",{ \n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json;charset=utf-8\", },\n        body: JSON.stringify({\n          Textbody2,\n        })\n      }).then((response) => response.json())\n        .then((data)=> console.log(data))             \n  },[textData]);\n\nuseEffect(() => {\n        \n  console.log(state);\n},[state])\n\n const  handleChangeEditor = () => {\n    setState(editorRef.current?.getInstance().getHTML());\n  };\nreturn (\n    <>\n    <QuestionBodyForm>\n        <Editor \n            onChange={[handleRegisterButton,handleChangeEditor]}\n            ref={editorRef} // DOM 선택용 useRef\n            placeholder=\"내용을 입력해주세요.\"\n            previewStyle=\"vertical\" // 미리보기 스타일 지정\n            height=\"2000px\" // 에디터 창 높이\n            initialEditType=\"markdown\" //wysiwyg\n            toolbarItems={[\n                // 툴바 옵션 설정\n                ['heading', 'bold', 'italic', 'strike'],\n                ['hr', 'quote'],\n                ['ul', 'ol', 'task', 'indent', 'outdent'],\n                ['table', 'image', 'link'],\n                ['code', 'codeblock']\n            ]}\n            useCommandShortcut={false} // 키보드 입력 컨트롤 방지\n        ></Editor>\n\n{/* <QuestionButton onClick={handleRegisterButton}>등록</QuestionButton> */}\n        \n        <QuestionButton onClick={handleChangeEditor}>\n              뷰어로 확인\n              </QuestionButton>\n           \n            <div>\n              <textarea\n                className=\"tf_result\"\n                value={state}\n                readOnly=\"readOnly\"\n              ></textarea>\n            </div>\n            \n            </QuestionBodyForm>\n            </>\n            \n         \n\n    \n);\n}","/* eslint-disable */\n/*\n? 김용훈 만듬\n*/\nimport styled from 'styled-components/macro';\nimport TextEditor from '../TextEditor/TextEditor';\nimport TextEditor2 from '../TextEditor/TextEditor2';\nimport React from 'react';\n\n\nconst QuestionSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100;\n  min-width: 100;\n  margin-left: 0px;\n  \n`;\nconst CreateHead = styled.div`\n  display: flex;\n  width: 580px;\n  font-size: 28px;\n  margin: 25px 0px 55px 0px;\n  font-weight: 650;\n  height: auto;\n`;\n\nconst QuestionForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 770px;\n  height: 250px;\n  font-size: 16px;\n  margin-top: 15px;\n  margin-bottom: 25px;\n  background-color: #EDF4FB;\n  border: 0.1px solid rgba(177, 204, 235, 2);\n  line-height: 25px;\n  border-radius: 5px;\n  h3 {\n    margin: 15px 0px 5px 20px;\n    font-size: 24px;\n  }\n  h4{\n    font-size: 18px;\n    margin: 10px 0px -25px 00px;\n  }\n  .FormText{\n    margin-right: 120px;\n  }\n`;\n\nconst QuestionForm2 = styled.div`\n  width: 770px;\n  height: 250px;\n  font-size: 15px;\n  color: black;\n  margin: 10px 0px 0px 20px;\n  border-radius: 5px;\n  font-weight: 300;\n  a {\n    text-decoration: none;\n    color: #0173cc;\n  }\n  a:hover {\n    color: #0995fd;\n  }\n`;\nconst TitleT = styled.div`\n\n  .title {\n    display: inline-block;\n    color: black;\n    font-size: 14px;\n    font-weight: 650;\n  }\n \n`;\nconst TitleT2 = styled.form`\ntext-align: left;\nflex-direction: column;\n  width:450px;\n  line-height: 110%;\n  margin-top: 30px;\n  li {\n    \n    margin-left: 20px;\n    color: black;\n    font-size: 11px;\n  }\n`;\n\n// 제목\nconst QuestionTitleForm = styled.div`\n  width: 770px;\n  height: 130px;\n  font-size: 28px;\n  background-color: white;\n  border-radius: 5px;\n  border: 1px solid rgba(152, 152, 152, 0.6);\n  .title2 {\n    margin: 22px 500px 0px 20px;\n\n    font-size: 16px;\n    font-weight: 700;\n  }\n  .body2 {\n    font-size: 12px;\n    margin: 5px 300px 10px 20px;\n  }\n`;\n\n//타이틀 인풋\nconst QuestionTitleInput = styled.input`\n  width: 680px;\n  height: 30px;\n  margin-right: -5px;\n  margin-left: 20px;\n  border-radius: 5px;\n  border: 1px solid rgba(152, 152, 152, 0.6);\n`;\n\n//문제의 세부사항\nconst QuestionBodyForm = styled.div`\n  width: 770px;\n  font-size: 28px;\n  margin-top: 30px;\n  height: 750px;\n  border-radius: 5px;\n  background-color: white;\n  border: 1px solid rgba(152, 152, 152, 0.6);\n  .title {\n    margin: 20px 390px 10px 20px;\n\n    font-size: 16px;\n    font-weight: 700;\n  }\n  .title1 {\n    margin: 20px 0px 10px 20px;\n\n    font-size: 16px;\n    font-weight: 700;\n  }\n  .body {\n    font-size: 12px;\n    margin: 5px 185px 15px 20px;\n  }\n  .body1 {\n    font-size: 12px;\n    margin: 5px 70px 15px 20px;\n  }\n`;\n\n//무엇을 시도했음?\n\n//태그\nconst QuestionTagForm = styled.div`\n  width: 770px;\n  height: 130px;\n  font-size: 28px;\n  margin-top: 20px;\n  background-color: white;\n  border-radius: 5px;\n  border: 1px solid rgba(152, 152, 152, 0.6);\n  .title3 {\n    margin: 21px 650px 10px 20px;\n\n    font-size: 16px;\n    font-weight: 700;\n  }\n  .body3 {\n    font-size: 12px;\n    margin: 5px 177px 10px 20px;\n  }\n`;\n\nconst QuestionButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 170px;\n  height: 40px;\n  margin:20px 0px 50px 1px;\n  padding:15px;\n \n  border: 0.01px solid #43549f;\n  color: white;\n  :hover {\n    background-color: #0173cc;\n    border: 2px solid #0173cc;\n  }\n  background-color: #0995fd;\n  border: 2px solid #0a95ff;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n\n// \n// \n// const TextEditor1 = [TextEditor1,setTextEditor1] = useState();\n// const TextEditor2 = [TextEditor2,setTextEditor2] = useState();\n\nconst CreateQuestionForm = () => (\n  <QuestionSection>\n    <CreateHead>Ask a public question</CreateHead>\n    <QuestionForm>\n      <h3>Writing a good question </h3>\n      <QuestionForm2>\n        You’re ready to <a href=\"#a\">ask</a> a\n        <a href=\"#a\">programming-related question</a> and this form will help\n        guide you through the process.\n        <div className=\"FormText\"> Looking to ask a non-programming\n        question? See <a href=\"#a\"> the topics here </a> to find a relevant\n        site.\n        </div>\n        <TitleT>\n         <ul >\n         <h4>Steps </h4>\n            <TitleT2>\n            <li>Summarize your problem in a one-line title.</li>\n            <li>Describe your problem in more detail.</li>\n            <li>Describe what you tried and what you expected to happen.</li>\n            <li>Add “tags” which help surface your question to members of the community.</li>\n            <li>Review your question and post it to the site.</li>\n            </TitleT2>        \n        </ul>\n        </TitleT>\n      </QuestionForm2>\n    </QuestionForm>\n    <QuestionTitleForm>\n      <div className=\"title2\">Title</div>\n      <div className=\"body2\">\n        Be specific and imagine you’re asking a question to another person.\n      </div>\n      <QuestionTitleInput />\n    </QuestionTitleForm>\n    <QuestionBodyForm>\n      <div className=\"title\">What are the details of your problem?</div>\n      <div className=\"body\">\n        Introduce the problem and expand on what you put in the title. Minimum\n        20 characters.\n      </div>\n      <TextEditor TextEditor1 />\n    </QuestionBodyForm>\n    <QuestionBodyForm>\n      <div className=\"title1\">\n        What did you try and what were you expecting?\n      </div>\n      <div className=\"body1\">\n        Describe what you tried, what you expected to happen, and what actually resulted. Minimum 20 characters\n      </div>\n      <TextEditor2 TextEditor2 />\n    </QuestionBodyForm>\n    <QuestionTagForm>\n      <div className=\"title3\">Tags</div>\n      <div className=\"body3\">\n      Add up to 5 tags to describe what your question is about. Start typing to see suggestions.\n      </div>\n      <QuestionTitleInput />\n    </QuestionTagForm>\n    <QuestionButton>Review your question</QuestionButton>\n  </QuestionSection>\n);\n\nexport default CreateQuestionForm;\n","/* eslint-disable */\n/*\n? 김용훈 만듬\n*/\nimport styled from 'styled-components/macro';\nimport WritingTitle from '../components/CreateQuestion/WritingTitle';\nimport CreateQuestionForm from '../components/CreateQuestion/CreateQuestionForm';\nimport Footer from '../components/Footer/Footer';\nimport React  from 'react';\n\nconst CreateQuestionContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  width: 100vw;\n  min-height: 300vh;\n  background-color: #f0f2f4;\n`;\n\nconst CreateQuestionPage = () => {\n  return (\n    <CreateQuestionContainer>\n      <CreateQuestionForm />\n      <WritingTitle />\n      <Footer />\n    </CreateQuestionContainer>\n  );\n};\n\nexport default CreateQuestionPage;\n"],"names":["WritingContainer","styled","SlPencilLogo","SlPencil","WritingTitleForm","WritingTitleForm2","WritingTitleForm3","className","QuestionBodyForm","QuestionButton","ToastEditor","editorRef","useRef","useState","textData","setData","state","setState","useEffect","console","log","handleChangeEditor","current","getInstance","getHTML","onChange","getMarkdown","ref","placeholder","previewStyle","height","initialEditType","toolbarItems","useCommandShortcut","onClick","value","readOnly","ToastEditor2","Textbody2","fetch","method","headers","body","JSON","stringify","then","response","json","data","QuestionSection","CreateHead","QuestionForm","QuestionForm2","TitleT","TitleT2","QuestionTitleForm","QuestionTitleInput","QuestionTagForm","href","TextEditor1","TextEditor2","CreateQuestionContainer","Footer"],"sourceRoot":""}